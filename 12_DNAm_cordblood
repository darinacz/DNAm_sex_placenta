library(Biobase)
library(foreign)
library(MASS)
library(lmtest)
library(sandwich)


#load ITU DNAm data in CVS
load("BetaSet_ITU_264.rda")
beta_cvs<-exprs(Beta_ITU_264)
pt_cvs<-pData(Beta_ITU_264)

#load ITU DNAm data in placenta
load("BetaSet_ITU_470.rda")
beta_plac<-exprs(Beta_ITU_470)
pt_plac<-pData(Beta_ITU_470)

#load ITU DNAm data in cordblood
load("BetaSet_ITU_426.rda")
beta_cb<-exprs(Beta_ITU_426)
pt_cb<-pData(Beta_ITU_426)

#overlap
length(which(rownames(pt_plac)%in% rownames(pt_cb) & rownames(pt_plac)%in% rownames(pt_cvs))) #n=66
index<-which(rownames(pt_plac)%in% rownames(pt_cb) & rownames(pt_plac)%in% rownames(pt_cvs)) #n=66

#run analysis on overlaps
#plac
beta_sub_plac<-beta_plac[,index]
pt_sub_plac<-pt_plac[index,]
all.equal(rownames(pt_sub_plac),colnames(beta_sub_plac)) #TRUE
#save final ESet
phenoD=new("AnnotatedDataFrame", data= pt_sub_plac)
Beta_ITU_66_plac = new("ExpressionSet", exprs= as.matrix(beta_sub_plac), phenoData=phenoD)
save(Beta_ITU_66_plac,file="BetaSet_ITU_66_plac.rda")
beta<-beta_sub_plac
pt<-pt_sub_plac

#run rlm using White's estimator
results<-matrix(ncol=4,nrow=dim(beta)[1])
for (i in 1: dim(beta)[1])
{
  results[i,1]<-rownames(beta)[i]
  mod<-rlm(beta[i,]~pt$gestage_days+pt$smoking+pt$Trophoblasts+pt$Stromal+pt$Endothelial+
             pt$nRBC+pt$Syncytiotrophoblast+pt$sex)
  cf = try(coeftest(mod, vcov=vcovHC(mod, type="HC0")))
  if (class(cf)=="try-error") {
    results[i,2]<-"NA"
    results[i,3]<-"NA"
    results[i,4]<-"NA"
  }
  else{
    results[i,2]<-cf[9,1]
    results[i,3]<-cf[9,2]
    results[i,4]<-cf[9,4]
  }
  print(i)
}

results<-as.data.frame(results)
names(results)<-c("CpG","beta_sex","se_sex","p_sex")
for (i in 2:4)
{results[,i]<-as.numeric(as.character(results[,i]))}

results->results_ITU_sex
save(results_ITU_sex,file="results_ITU_66_sex_plac.Rdata")
write.table(results_ITU_sex,"results_ITU_66_sex_plac.txt",sep="\t",quote=F,row.names=F)

#cvs
index<-which(rownames(pt_cvs)%in% rownames(pt_cb) & rownames(pt_cvs)%in% rownames(pt_plac)) #n=66
beta_sub_cvs<-beta_cvs[,index]
pt_sub_cvs<-pt_cvs[index,]
all.equal(rownames(pt_sub_cvs),colnames(beta_sub_cvs)) #TRUE
#save final ESet
phenoD=new("AnnotatedDataFrame", data= pt_sub_cvs)
Beta_ITU_66_cvs = new("ExpressionSet", exprs= as.matrix(beta_sub_cvs), phenoData=phenoD)
save(Beta_ITU_66_cvs,file="BetaSet_ITU_66_cvs.rda")
beta<-beta_sub_cvs
pt<-pt_sub_cvs

#run rlm using White's estimator
results<-matrix(ncol=4,nrow=dim(beta)[1])
for (i in 1: dim(beta)[1])
{
  results[i,1]<-rownames(beta)[i]
  mod<-rlm(beta[i,]~pt$gestage_at_CVS_days+pt$smoking+pt$Trophoblasts+pt$Stromal+pt$Endothelial+
             pt$nRBC+pt$Syncytiotrophoblast+pt$sex)
  cf = try(coeftest(mod, vcov=vcovHC(mod, type="HC0")))
  if (class(cf)=="try-error") {
    results[i,2]<-"NA"
    results[i,3]<-"NA"
    results[i,4]<-"NA"
  }
  else{
    results[i,2]<-cf[9,1]
    results[i,3]<-cf[9,2]
    results[i,4]<-cf[9,4]
  }
  print(i)
}

results<-as.data.frame(results)
names(results)<-c("CpG","beta_sex","se_sex","p_sex")
for (i in 2:4)
{results[,i]<-as.numeric(as.character(results[,i]))}

results->results_ITU_sex_cvs
save(results_ITU_sex_cvs,file="results_ITU_66_sex_cvs.Rdata")
write.table(results_ITU_sex_cvs,"results_ITU_66_sex_cvs.txt",sep="\t",quote=F,row.names=F)


#cordblood
index<-which(rownames(pt_cb)%in% rownames(pt_cvs) & rownames(pt_cb)%in% rownames(pt_plac)) #n=66
beta_sub_cb<-beta_cb[,index]
pt_sub_cb<-pt_cb[index,]
all.equal(rownames(pt_sub_cb),colnames(beta_sub_cb)) #TRUE
#save final ESet
phenoD=new("AnnotatedDataFrame", data= pt_sub_cb)
Beta_ITU_66_cb = new("ExpressionSet", exprs= as.matrix(beta_sub_cb), phenoData=phenoD)
save(Beta_ITU_66_cb,file="BetaSet_ITU_66_cb.rda")
beta<-beta_sub_cb
pt<-pt_sub_cb

#run rlm using White's estimator
results<-matrix(ncol=4,nrow=dim(beta)[1])
for (i in 1: dim(beta)[1])
{
  results[i,1]<-rownames(beta)[i]
  mod<-rlm(beta[i,]~pt$Gestational_Age_Days+pt$smoking+pt$CD8T+pt$CD4T+pt$NK+pt$Bcell+pt$Mono+pt$Gran+
             pt$nRBC+pt$sex)
  cf = try(coeftest(mod, vcov=vcovHC(mod, type="HC0")))
  if (class(cf)=="try-error") {
    results[i,2]<-"NA"
    results[i,3]<-"NA"
    results[i,4]<-"NA"
  }
  else{
    results[i,2]<-cf[11,1]
    results[i,3]<-cf[11,2]
    results[i,4]<-cf[11,4]
  }
  print(i)
}

results<-as.data.frame(results)
names(results)<-c("CpG","beta_sex","se_sex","p_sex")
for (i in 2:4)
{results[,i]<-as.numeric(as.character(results[,i]))}

results->results_ITU_sex_cb
save(results_ITU_sex_cb,file="results_ITU_66_sex_cb.Rdata")
write.table(results_ITU_sex_cb,"results_ITU_66_sex_cb.txt",sep="\t",quote=F,row.names=F)

#merge all three
results_ITU_sex_cvs->cvs
names(cvs)<-c("CpG","beta_cvs","se_cvs","p_cvs")
cvs$FDR_cvs<-p.adjust(cvs$p_cvs,method="BH")


results_ITU_sex->plac
names(plac)<-c("CpG","beta_plac","se_plac","p_plac")
plac$FDR_plac<-p.adjust(plac$p_plac,method="BH")


results_ITU_sex_cb->cb
names(cb)<-c("CpG","beta_cb","se_cb","p_cb")

all<-merge(cvs,plac,by=1)
all<-merge(all,cb,by=1)
which(is.na(all$p_cvs)) #none
which(all$p_cvs==0) #none
which(is.na(all$p_plac)) #none
which(all$plac==0) #none
which(is.na(all$p_cb)) #none
which(all$p_cb==0) #n=3
index<-which(all$p_cb==0)
min(all$p_cb[-index])#p=7.556974e-231
all$p_cb[index]<-7.556974e-231
write.table(all,"results_cvs_plac_cb_66_sex.txt",sep="\t",quote=F)

library(corrplot)
col <- colorRampPalette(c("#BB4444", "#EE9988", "#FFFFFF", "#77AADD", "#4477AA"))
corrplot(cor(all[,c(2,6,10)],use="pairwise.complete.obs"),type="upper",addCoef.col = "black",col=col(200))
dev.print("corr_cvs_plac_cordblood_allCpGs.pdf",dev=pdf)
index<-which(all$FDR_plac<0.05)#n=8,215
corrplot(cor(all[index,c(2,6,10)],use="pairwise.complete.obs"),type="upper",addCoef.col = "black",col=col(200))
dev.print("corr_cvs_plac_cordblood_FDR0.05_CpGs.pdf",dev=pdf)














